{"version":3,"sources":["screens/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","width","padding","spacing","root","margin","icons","intro","fontSize","mainBox","height","flexDirection","alignContent","Main","useState","value","setValue","name","setName","phone","setPhone","email","setEmail","message","setMessage","open","setOpen","btn","setbtn","classes","useEffect","console","log","className","style","color","Typography","Rating","paddingTop","onChange","event","newValue","Modal","aria-labelledby","aria-describedby","Button","variant","onClick","float","id","noValidate","autoComplete","TextField","fullWidth","label","target","multiline","rows","html","emailjs","send","reply_to","to_name","from_name","sender","message_html","then","result","error","text","FacebookShareButton","url","quote","FacebookIcon","size","round","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fb9383e1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  InstapaperShareButton,\r\n  LinkedinShareButton,\r\n  MailruShareButton,\r\n  PinterestShareButton,\r\n  RedditShareButton,\r\n  TelegramShareButton,\r\n  TumblrShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  FacebookIcon,\r\n} from \"react-share\";\r\n\r\nimport styles from \"./Home.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"white\",\r\n    width: 600,\r\n    //border: \"2px solid #000\",\r\n    //boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  icons: {\r\n    padding: 10,\r\n  },\r\n  intro: {\r\n    fontSize: 20,\r\n  },\r\n  mainBox: {\r\n    height: \"80vh\",\r\n    flexDirection: \"column\",\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst Main = () => {\r\n  const [value, setValue] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [btn, setbtn] = useState(\"Send Message\");\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (value != null) {\r\n      console.log(value);\r\n      if (value < 4) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(true);\r\n      }\r\n    }\r\n  }, [value]);\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n  const submitData = () => {\r\n    console.log(name);\r\n    setbtn(\"Loading\");\r\n    const html = `<div>\r\n    <p>The name is ${name}\r\n    <p>The email is ${email}\r\n    <p>The phone is ${phone}\r\n    <p>The message is ${message}\r\n    </div>`;\r\n    emailjs\r\n      .send(\r\n        \"sendgrid\",\r\n        \"template_VRUeOVhw\",\r\n        {\r\n          reply_to: \"harjeevs17@gmail.com\",\r\n          to_name: \"Harjeev\",\r\n          from_name: \"noreply@gmail.com\",\r\n          sender: name,\r\n          message_html: html,\r\n        },\r\n        \"user_8fCHR8UMMvdJCNYX8uhVe\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          setbtn(\"Send Message\");\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.mainBox}>\r\n      <div>\r\n        <p style={{ margin: 20 }}>\r\n          Help us. Help others. Youâ€™re invited to review:\r\n        </p>\r\n        <h1 style={{ padding: 10, fontSize: 50, color: \"#1b75bb\" }}>\r\n          YOUR LOGO HERE\r\n        </h1>\r\n        <Typography\r\n          className={classes.intro}\r\n          style={{ padding: 20, color: \"#1b75bb\" }}\r\n        >\r\n          Please take a moment to review your experience with us. Your feedback\r\n          not only helps us, it helps other potential customers.\r\n        </Typography>\r\n      </div>\r\n      <div className=\"stars\">\r\n        <Rating\r\n          style={{ fontSize: 70, paddingTop: 20 }}\r\n          name=\"simple-controlled\"\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n        />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        className={classes.modal}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className={classes.paper}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={closeModal}\r\n            style={{ float: \"right\" }}\r\n          >\r\n            X\r\n          </Button>\r\n          {value < 4 ? (\r\n            <>\r\n              <h2 id=\"simple-modal-title\">Give us your review</h2>\r\n              <div className={classes.root} noValidate autoComplete=\"off\">\r\n                <div>\r\n                  <p>\r\n                    We strive for 100% customer satisfaction. If we fell short,\r\n                    please tell us more so we can address your concerns.\r\n                  </p>\r\n                </div>\r\n\r\n                <form noValidate autoComplete=\"off\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"standard-basic\"\r\n                    label=\"Name\"\r\n                    onChange={(event, newValue) => {\r\n                      setName(event.target.value);\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"standard-basic\"\r\n                    label=\"Phone\"\r\n                    onChange={(event, newValue) => {\r\n                      setPhone(event.target.value);\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"standard-basic\"\r\n                    label=\"Email\"\r\n                    onChange={(event, newValue) => {\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    onChange={(event, newValue) => {\r\n                      setMessage(event.target.value);\r\n                    }}\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Message\"\r\n                    multiline\r\n                    rows={4}\r\n                  />\r\n                  <Button variant=\"contained\" onClick={submitData}>\r\n                    {btn}\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h2 id=\"simple-modal-title\">Share the word</h2>\r\n              <div className={classes.root}>\r\n                <div>\r\n                  <p>\r\n                    Thank you! We need your help. Would you share your\r\n                    experience on one of these sites?\r\n                  </p>\r\n                  <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                    <div className={classes.icons}>\r\n                      <FacebookShareButton url=\"facebook.com\" quote=\"hihihi\">\r\n                        <FacebookIcon size={32} round />\r\n                      </FacebookShareButton>\r\n                    </div>\r\n                    <div className={classes.icons}>\r\n                      <FacebookShareButton url=\"facebook.com\" quote=\"hihihi\">\r\n                        <FacebookIcon size={32} round />\r\n                      </FacebookShareButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./screens/Home\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}